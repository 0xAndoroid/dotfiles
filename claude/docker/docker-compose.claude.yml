services:
  claude-dev:
    build:
      context: .
      dockerfile: Dockerfile.claude
    image: claude-dev:latest
    container_name: ${CONTAINER_NAME:-claude-dev}
    user: "1000:1000"
    volumes:
      # Mount the current directory as project folder (bind mount)
      - type: bind
        source: ${WORK_DIR:-./}
        target: /${PROJECT_PATH:-workspace}
        consistency: delegated
      # Mount Claude configuration
      - ~/.claude.json:/home/developer/.claude.json:rw
      - ~/.dotfiles/claude/CLAUDE.md:/home/developer/.claude/CLAUDE.md:rw
      - ~/.dotfiles/claude/settings.json:/home/developer/.claude/settings.json:rw
      - ~/.dotfiles/claude/commands:/home/developer/.claude/commands:rw
      - ~/.claude/projects:/home/developer/.claude/projects:rw
      - ~/.claude/sessions:/home/developer/.claude/sessions:rw
      - ~/.claude/todos:/home/developer/.claude/todos:rw
      - ~/.claude/statsig:/home/developer/.claude/statsig:rw
      # Mount Claude credentials
      - ~/.claude/.credentials.json:/home/developer/.claude/.credentials.json:rw
      # Monut ssh key for commiting
      - ~/.ssh/github_ed25519:/home/developer/.ssh/github_ed25519:ro
      # Shared cargo registry across all containers
      - claude-cargo-registry:/home/developer/.cargo/registry
      - claude-cargo-git:/home/developer/.cargo/git
      # Cargo target directory (build artifacts) - container-only for performance
      - claude-cargo-target:/home/developer/.cargo-target
      # Host configs
      - ~/.dotfiles/.gitconfig:/home/developer/.gitconfig:ro
      - ~/.dotfiles/.rustfmt.toml:/home/developer/.rustfmt.toml:ro
      - ~/.dotfiles/.gitignore_global:/home/developer/.gitignore_global:ro
    environment:
      # Set Rust backtrace for better debugging
      - RUST_BACKTRACE=1
      # Pass through API keys for MCP server
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # Enable full color support
      - TERM=xterm-256color
      # Rust/Cargo optimizations
      - CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
      - CARGO_NET_GIT_FETCH_WITH_CLI=true
      - CARGO_INCREMENTAL=1
      - CARGO_BUILD_JOBS=8
    # Network isolation - only allow outbound connections
    network_mode: bridge
    # Security options
    security_opt:
      - no-new-privileges:true
    # Read-only root filesystem except for mounted volumes
    read_only: false # Set to true for extra security, but may cause issues
    # Prevent privilege escalation
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    stdin_open: true
    tty: true

volumes:
  claude-cargo-registry:
    external: true
  claude-cargo-git:
    external: true
  claude-cargo-target:
    external: true
