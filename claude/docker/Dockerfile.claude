# Use Ubuntu as base image for better compatibility with development tools
FROM ubuntu:22.04

# Install essential development tools
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    pkg-config \
    libssl-dev \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    wget \
    jq \
    tree \
    htop \
    ripgrep \
    fd-find \
    bat \
    zsh \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 20 (LTS)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user for running Claude
RUN useradd -m -s /bin/bash -u 1000 developer && \
    mkdir -p /workspace && \
    chown -R developer:developer /workspace

# Create MCP directory structure and install zen-mcp-server
RUN mkdir -p /usr/local/mcp && \
    cd /usr/local/mcp && \
    git clone https://github.com/BeehiveInnovations/zen-mcp-server.git && \
    cd zen-mcp-server && \
    python3 -m venv .zen_venv && \
    .zen_venv/bin/pip install --upgrade pip && \
    .zen_venv/bin/pip install -r requirements.txt && \
    chown -R developer:developer /usr/local/mcp

# Switch to non-root user
USER developer

# Set up user-writable npm prefix for autoupdates
RUN mkdir -p ~/.npm-global && \
    npm config set prefix ~/.npm-global

# Install Claude Code in user-writable location
RUN npm install -g @anthropic-ai/claude-code

# Install TypeScript globally
RUN npm install -g typescript

# Set up cargo for the developer user
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Install Foundry as developer user
RUN curl -L https://foundry.paradigm.xyz | bash && \
    /home/developer/.foundry/bin/foundryup

ENV PATH="/home/developer/.npm-global/bin:/home/developer/.cargo/bin:/home/developer/.foundry/bin:${PATH}"

# Install cargo-binstall for the developer user
RUN cargo install cargo-binstall

# Install useful Rust tools for developer user
RUN cargo binstall -y \
    cargo-audit \
    cargo-cache \
    cargo-edit \
    cargo-nextest \
    du-dust \
    just \
    tokei \
    typos-cli \
    tomlq

WORKDIR /

RUN mkdir -p ~/.config && \
    mkdir -p ~/.claude

# Create useful aliases and setup
RUN echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc && \
    echo 'alias ll="ls -la"' >> ~/.bashrc && \
    echo 'alias la="ls -la"' >> ~/.bashrc && \
    echo 'alias l="ls -l"' >> ~/.bashrc && \
    echo 'alias bat="batcat"' >> ~/.bashrc && \
    echo 'alias cat="batcat"' >> ~/.bashrc && \
    echo 'alias find="fd"' >> ~/.bashrc && \
    echo 'alias grep="rg"' >> ~/.bashrc && \
    echo 'alias ls="eza"' >> ~/.bashrc && \
    echo 'alias du="dust"' >> ~/.bashrc

# Install eza (modern ls replacement)
RUN cargo binstall -y eza

# Set up shell
SHELL ["/bin/bash", "-c"]

# Keep container running
CMD ["/bin/bash"]
