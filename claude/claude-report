#!/usr/bin/env zsh

# Claude session reporting script
set -e

# Function to show usage
usage() {
    echo "Usage: $0 -t TYPE -i IMPACT -d DESCRIPTION [-s SESSION_FILE]"
    echo "  -t TYPE         Event type: 'decision' or 'milestone'"
    echo "  -i IMPACT       Impact level: 'high' or 'low'"
    echo "  -d DESCRIPTION  Description of the event"
    echo "  -s SESSION_FILE Optional: Session file path (defaults to latest session)"
    exit 1
}

# Parse arguments
TYPE=""
IMPACT=""
DESCRIPTION=""
SESSION_FILE=""

while getopts "t:i:d:s:h" opt; do
    case $opt in
        t) TYPE="$OPTARG" ;;
        i) IMPACT="$OPTARG" ;;
        d) DESCRIPTION="$OPTARG" ;;
        s) SESSION_FILE="$OPTARG" ;;
        h) usage ;;
        *) usage ;;
    esac
done

# Validate required arguments
if [[ -z "$TYPE" || -z "$IMPACT" || -z "$DESCRIPTION" ]]; then
    echo "Error: Missing required arguments"
    usage
fi

# Validate type
if [[ "$TYPE" != "decision" && "$TYPE" != "milestone" ]]; then
    echo "Error: Type must be 'decision' or 'milestone'"
    exit 1
fi

# Validate impact
if [[ "$IMPACT" != "high" && "$IMPACT" != "low" ]]; then
    echo "Error: Impact must be 'high' or 'low'"
    exit 1
fi

# If no session file provided, try to find the latest one
if [[ -z "$SESSION_FILE" ]]; then
    # Look for the most recent session file
    SESSION_DIR=~/.claude/sessions
    if [[ -d "$SESSION_DIR" ]]; then
        SESSION_FILE=$(ls -t "$SESSION_DIR"/*.txt 2>/dev/null | head -n1)
        if [[ -z "$SESSION_FILE" ]]; then
            echo "Error: No session file found and none specified"
            exit 1
        fi
    else
        echo "Error: Session directory not found and no session file specified"
        exit 1
    fi
fi

# Generate ISO8601 timestamp in local time
TIMESTAMP=$(date +"%Y-%m-%dT%H:%M:%S")

# Create JSON object
JSON_OBJECT=$(cat <<EOF
{"type": "$TYPE", "impact": "$IMPACT", "timestamp": "$TIMESTAMP", "description": "$DESCRIPTION"}
EOF
)

# Append to session file
echo "$JSON_OBJECT" >> "$SESSION_FILE"

# Provide feedback
echo "Logged $TYPE event (impact: $IMPACT) to $SESSION_FILE"