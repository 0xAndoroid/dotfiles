{
  "permissions": {
    "allow": [
      "Read(**)",
      "LS",
      "Glob",
      "Grep",
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(RUSTFLAGS=:*)",
      "Bash(cargo test:*)",
      "Bash(cargo nextest:*)",
      "Bash(cargo run:*)",
      "Bash(cargo build:*)",
      "Bash(cargo fmt:*)",
      "Bash(cargo doc:*)",
      "Bash(cargo clean)",
      "Bash(typos)",
      "Bash(rustc --version)",
      "Bash(rustup:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr status:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh repo view:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git branch:*)",
      "Bash(git show:*)",
      "Bash(git remote:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(fd:*)",
      "Bash(tail:*)",
      "Bash(head:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(xargs:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(npm list:*)",
      "Bash(mkdir:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn test:*)",
      "Bash(yarn build:*)",
      "Bash(yarn dev:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm dev:*)",
      "Bash(python -m pytest:*)",
      "Bash(python -m unittest:*)",
      "Bash(python -m mypy:*)",
      "Bash(python -m black:*)",
      "Bash(python -m ruff:*)",
      "Bash(python -m flake8:*)",
      "Bash(python -m pylint:*)",
      "Bash(poetry run:*)",
      "Bash(pipenv run:*)",
      "Bash(uv run:*)",
      "Bash(make:*)",
      "Bash(cmake:*)",
      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker-compose ps:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl logs:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(whoami)",
      "Bash(date:*)",
      "Bash(uname:*)",
      "Bash(df:*)",
      "Bash(du:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(which:*)",
      "Bash(type:*)",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(tree:*)",
      "Bash(bat:*)",
      "Bash(exa:*)",
      "Bash(eza:*)",
      "Bash(export:*)",
      "Bash(tokei:*)",
      "Bash(scc:*)",
      "Bash(cloc:*)",
      "Bash(cd:*)",
      "Bash(pushd:*)",
      "Bash(popd:*)",
      "Bash(dirs:*)",
      "Bash(builtin cd:*)",
      "Bash(/usr/bin/cd:*)",
      "Bash(forge build:*)",
      "Bash(forge test:*)",
      "Bash(forge fmt:*)",
      "Bash(forge verify-contract:*)",
      "Bash(forge create:*)",
      "Bash(forge script:*)",
      "Bash(forge clean)",
      "Bash(forge snapshot:*)",
      "Bash(forge coverage:*)",
      "Bash(forge bind:*)",
      "Bash(forge doc:*)",
      "Bash(forge flatten:*)",
      "Bash(forge inspect:*)",
      "Bash(forge tree:*)",
      "Bash(forge config:*)",
      "Bash(forge remappings:*)",
      "Bash(forge --version)",
      "Bash(cast abi-encode:*)",
      "Bash(cast abi-decode:*)",
      "Bash(cast call:*)",
      "Bash(cast calldata:*)",
      "Bash(cast chain-id:*)",
      "Bash(cast compute-address:*)",
      "Bash(cast estimate:*)",
      "Bash(cast gas-price:*)",
      "Bash(cast keccak:*)",
      "Bash(cast lookup:*)",
      "Bash(cast receipt:*)",
      "Bash(cast resolve-name:*)",
      "Bash(cast to-hex:*)",
      "Bash(cast to-dec:*)",
      "Bash(cast to-base:*)",
      "Bash(cast to-bytes32:*)",
      "Bash(cast to-ascii:*)",
      "Bash(cast to-utf8:*)",
      "Bash(cast --version)",
      "Bash(claude-report:*)",
      "Edit(src/**)",
      "Edit(tests/**)",
      "Edit(test/**)",
      "Edit(spec/**)",
      "Edit(*.rs)",
      "Edit(*.py)",
      "Edit(*.js)",
      "Edit(*.lua)",
      "Edit(*.ts)",
      "Edit(*.jsx)",
      "Edit(*.tsx)",
      "Edit(*.json)",
      "Edit(*.toml)",
      "Edit(*.yaml)",
      "Edit(*.yml)",
      "Edit(*.md)",
      "Edit(*.txt)",
      "Edit(*.sol)",
      "Edit(*.huff)",
      "Edit(*.go)",
      "Edit(*.java)",
      "Edit(*.cpp)",
      "Edit(*.c)",
      "Edit(*.h)",
      "Edit(*.hpp)",
      "Edit(*.cs)",
      "Edit(*.rb)",
      "Edit(*.php)",
      "Edit(*.swift)",
      "Edit(*.kt)",
      "Edit(*.scala)",
      "Edit(*.r)",
      "Edit(*.m)",
      "Edit(*.sh)",
      "Edit(*.bash)",
      "Edit(*.zsh)",
      "Edit(*.fish)",
      "Edit(*.vue)",
      "Edit(*.svelte)",
      "Edit(*.css)",
      "Edit(*.scss)",
      "Edit(*.sass)",
      "Edit(*.less)",
      "Edit(*.html)",
      "Edit(*.xml)",
      "Edit(*.sql)",
      "Edit(*.graphql)",
      "Edit(*.proto)",
      "Edit(*.dart)",
      "Edit(*.elm)",
      "Edit(*.ex)",
      "Edit(*.exs)",
      "Edit(*.clj)",
      "Edit(*.cljs)",
      "Edit(*.zig)",
      "Edit(*.nim)",
      "Edit(*.v)",
      "Edit(*.ml)",
      "Edit(*.mli)",
      "Edit(*.fs)",
      "Edit(*.fsx)",
      "Edit(*.jl)",
      "Edit(*.hs)",
      "Edit(*.lhs)",
      "Edit(*.pl)",
      "Edit(*.pm)",
      "Edit(*.t)",
      "Edit(*.asm)",
      "Edit(*.s)",
      "Edit(*.wat)",
      "Edit(*.wasm)",
      "Edit(Cargo.toml)",
      "Edit(Cargo.lock)",
      "Edit(package.json)",
      "Edit(package-lock.json)",
      "Edit(pyproject.toml)",
      "Edit(requirements.txt)",
      "Edit(Makefile)",
      "Edit(Dockerfile)",
      "Edit(docker-compose.yml)",
      "Edit(.gitignore)",
      "Edit(README.md)",
      "Edit(LICENSE)",
      "Search(**)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:crates.io)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:rust-lang.org)",
      "WebFetch(domain:python.org)",
      "WebFetch(domain:nodejs.org)",
      "WebFetch(domain:developer.mozilla.org)"
    ],
    "deny": [
      "Bash(rm -rf:*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(chmod 777:*)",
      "Bash(curl:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "Bash(git tag:*)",
      "Bash(git credential:*)",
      "Bash(git config:*)",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(gh repo delete:*)",
      "Bash(gh repo fork:*)",
      "Bash(gh repo clone:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh repo transfer:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr close:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr review:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue delete:*)",
      "Bash(gh issue edit:*)",
      "Bash(gh release create:*)",
      "Bash(gh release delete:*)",
      "Bash(gh release upload:*)",
      "Bash(gh gist create:*)",
      "Bash(gh gist delete:*)",
      "Bash(gh gist edit:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh workflow disable:*)",
      "Bash(gh workflow enable:*)",
      "Bash(gh secret:*)",
      "Bash(gh ssh-key:*)",
      "Bash(gh gpg-key:*)",
      "Bash(gh codespace:*)",
      "Bash(gh org:*)",
      "Bash(gh config set:*)",
      "Bash(wget:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(apt:*)",
      "Bash(yum:*)",
      "Bash(brew:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(reboot:*)",
      "Bash(shutdown:*)",
      "Bash(passwd:*)",
      "Bash(useradd:*)",
      "Bash(userdel:*)",
      "Bash(groupadd:*)",
      "Bash(nc:*)",
      "Bash(netcat:*)",
      "Bash(telnet:*)",
      "Bash(ftp:*)",
      "Edit(~/.ssh/**)",
      "Edit(~/.keysrc)",
      "Edit(~/.aws/**)",
      "Edit(~/.config/gh/**)",
      "Edit(/etc/**)",
      "Edit(/sys/**)",
      "Edit(/proc/**)",
      "Read(~/.ssh/**)",
      "Read(~/.aws/**)",
      "Read(~/.keysrc)",
      "Read(**/.env)",
      "Read(**/secrets/**)",
      "Read(**/credentials/**)"
    ]
  },
  "forceLoginMethod": "claudeai",
  "enableAllProjectMcpServers": true,
  "includeCoAuthoredBy": false,
  "env": {
    "ANTHROPIC_MODEL": "claude-opus-4-1-20250805"
  }
}
